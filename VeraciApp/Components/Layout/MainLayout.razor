@using MudBlazor  

@inherits LayoutComponentBase

<MudThemeProvider Theme="MyCustomTheme" />
<MudPopoverProvider />  
<MudDialogProvider />  
<MudSnackbarProvider />  

@code {

    MudTheme MyCustomTheme = new MudTheme()
        {

            PaletteLight = new PaletteLight()
            {
                Primary = Colors.Amber.Lighten4,
                AppbarBackground = Colors.Gray.Darken2
            },

            PaletteDark = new PaletteDark()
            {
                Primary = Colors.Amber.Lighten1,
                AppbarBackground = Colors.Gray.Darken4
            },

        };

}

<MudLayout>  
   <MudAppBar Elevation="1">
        <MudIconButton id="nav-drawer-toggle-button" Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" />
        <MudText Typo="Typo.h5" Class="ml-3">
			<a href="/">
                <img src="images/logonome64.png" height="40"/>
                
            </a>
       </MudText>  
       <MudSpacer />  
       <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" Href="/about" />  
   </MudAppBar>  
   <MudDrawer id="nav-drawer" ClipMode="DrawerClipMode.Always" Elevation="2">  
       <NavMenu />  
   </MudDrawer>  
   <MudMainContent Class="pt-16">  
       @Body  
   </MudMainContent>  
</MudLayout>  

<div id="blazor-error-ui" data-nosnippet>  
   An unhandled error has occurred.  
   <a href="." class="reload">Reload</a>  
   <span class="dismiss">🗙</span>  
</div>  

<script type="text/javascript">

    const toggleButton = document.getElementById("nav-drawer-toggle-button");
    const navDrawer = document.getElementById("nav-drawer");
    const drawerParent = navDrawer.parentElement;
    const desktopQuery = window.matchMedia("(min-width: 960px)");

    desktopQuery.addEventListener("change", ev => {
        if (ev.matches) {
            navDrawer.classList.add("mud-drawer-md");
            navDrawer.classList.remove("mud-drawer--closed");
            navDrawer.classList.add("mud-drawer--open");
            drawerParent.classList.remove("mud-drawer-closed-responsive-md-left");
            drawerParent.classList.add("mud-drawer-open-responsive-md-left");
        }
    });

    toggleButton.addEventListener("click", () => {
        const isDesktopWidth = desktopQuery.matches;
        const hasBreakpoint = navDrawer.classList.contains("mud-drawer-md");

        if (!isDesktopWidth && hasBreakpoint) {
            navDrawer.classList.remove("mud-drawer-md");
            return;
        }

        if (isDesktopWidth && !hasBreakpoint) {
            navDrawer.classList.add("mud-drawer-md");
        }

        navDrawer.classList.toggle("mud-drawer--open");
        navDrawer.classList.toggle("mud-drawer--closed");
        drawerParent.classList.toggle("mud-drawer-closed-responsive-md-left");
        drawerParent.classList.toggle("mud-drawer-open-responsive-md-left");
    });


</script>